{"ast":null,"code":"var _jsxFileName = \"D:\\\\CNPM\\\\catLovers_smartPrinting\\\\frontend\\\\src\\\\component\\\\LogTable\\\\logtable.jsx\";\nimport \"./logtable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogTable = ({\n  printingLogs\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"printing-logs-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"printing-logs-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"MSSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"T\\xEAn File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"B\\u1EAFt \\u0111\\u1EA7u\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"K\\u1EBFt th\\xFAc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ng\\xE0y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S\\u1ED1 trang\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: printingLogs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.sid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.pid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.file_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.stop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(log.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.page_number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, log.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n\n// const isDate = (value) => value instanceof Date && !isNaN(value);\n_c = LogTable;\nconst formatDate = date => {\n  return date.toLocaleDateString('en-GB', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n};\nexport default LogTable;\nvar _c;\n$RefreshReg$(_c, \"LogTable\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","LogTable","printingLogs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","sid","pid","file_name","start","stop","formatDate","date","page_number","id","_c","toLocaleDateString","day","month","year","$RefreshReg$"],"sources":["D:/CNPM/catLovers_smartPrinting/frontend/src/component/LogTable/logtable.jsx"],"sourcesContent":["import \"./logtable.css\";\r\nconst LogTable = ({ printingLogs }) => {\r\n  return (\r\n    <div className=\"printing-logs-table-container\">\r\n      <table className=\"printing-logs-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>MSSV</th>\r\n            <th>PID</th>\r\n            <th>Tên File</th>\r\n            <th>Bắt đầu</th>\r\n            <th>Kết thúc</th>\r\n            <th>Ngày</th>\r\n            <th>Số trang</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {printingLogs.map((log) => (\r\n            <tr key={log.id}>\r\n              <td>{log.sid}</td>\r\n              <td>{log.pid}</td>\r\n              <td>{log.file_name}</td>\r\n              <td>{log.start}</td>\r\n              <td>{log.stop}</td>\r\n              <td>{formatDate(log.date)}</td>\r\n              <td>{log.page_number}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const isDate = (value) => value instanceof Date && !isNaN(value);\r\n\r\n\r\nconst formatDate = (date) => {\r\n  return date.toLocaleDateString('en-GB', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric',\r\n  });\r\n};\r\n\r\nexport default LogTable;"],"mappings":";AAAA,OAAO,gBAAgB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AACxB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACrC,oBACEF,OAAA;IAAKG,SAAS,EAAC,+BAA+B;IAAAC,QAAA,eAC5CJ,OAAA;MAAOG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBACpCJ,OAAA;QAAAI,QAAA,eACEJ,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbR,OAAA;YAAAI,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZR,OAAA;YAAAI,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBR,OAAA;YAAAI,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBR,OAAA;YAAAI,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBR,OAAA;YAAAI,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbR,OAAA;YAAAI,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRR,OAAA;QAAAI,QAAA,EACGF,YAAY,CAACO,GAAG,CAAEC,GAAG,iBACpBV,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,EAAKM,GAAG,CAACC;UAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBR,OAAA;YAAAI,QAAA,EAAKM,GAAG,CAACE;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClBR,OAAA;YAAAI,QAAA,EAAKM,GAAG,CAACG;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBR,OAAA;YAAAI,QAAA,EAAKM,GAAG,CAACI;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBR,OAAA;YAAAI,QAAA,EAAKM,GAAG,CAACK;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBR,OAAA;YAAAI,QAAA,EAAKY,UAAU,CAACN,GAAG,CAACO,IAAI;UAAC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/BR,OAAA;YAAAI,QAAA,EAAKM,GAAG,CAACQ;UAAW;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAPnBE,GAAG,CAACS,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;;AAED;AAAAY,EAAA,GAjCMnB,QAAQ;AAoCd,MAAMe,UAAU,GAAIC,IAAI,IAAK;EAC3B,OAAOA,IAAI,CAACI,kBAAkB,CAAC,OAAO,EAAE;IACtCC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC;AAED,eAAevB,QAAQ;AAAC,IAAAmB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}